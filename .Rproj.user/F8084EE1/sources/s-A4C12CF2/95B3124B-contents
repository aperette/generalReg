require(insuranceData)
data(AutoBi)
#devtools::install_github("aperette/generalReg", force=TRUE)
require('generalReg')
require('gamlss')
AutoBi$ATTORNEY  <- as.factor(AutoBi$ATTORNEY  )
AutoBi$CLMSEX    <- as.factor( AutoBi$CLMSEX)
AutoBi$CLMINSUR  <- as.factor( AutoBi$CLMINSUR)
AutoBi$MARITAL   <- as.factor( AutoBi$MARITAL)
AutoBi$SEATBELT  <- as.factor( AutoBi$SEATBELT)
AutoBi <-  na.exclude(AutoBi)
attach(AutoBi)
XX = model.matrix(LOSS~ATTORNEY+CLMSEX+CLMINSUR+MARITAL+SEATBELT+CLMAGE)
BD <- data.frame(Y=log(LOSS),as.matrix(XX))

par_teste <- function(x, parameters,correction=FALSE,control=NULL,start=NULL){
  if(class(x)!="genReg")
    stop("x must be a genReg class",call. = F)

  par_teste=parameters

  formula=Reduce(paste, deparse(x$inputs$formula))
  formula_var=Reduce(paste, deparse(x$inputs$formula_var))

  theta_names = names(x$parameters)
  equals_par = names(parameters)[names(parameters) %in% names(x$parameters)]
  dif_par = names(x$parameters)[!names(x$parameters) %in% equals_par]
  wrong_par = names(parameters)[!names(parameters) %in% names(x$parameters)]
  if(length(wrong_par)>1) stop(paste0("Parameter ",dif_par[1]," not found"),call. = F)

  if(length(equals_par)<length(x$parameters)){
    for(i in 1:length(equals_par)){
      formula=stringr::str_replace_all(formula,equals_par[i],as.character(parameters[[equals_par[i]]]))
      formula_var=stringr::str_replace_all(formula_var,equals_par[i],as.character(parameters[[equals_par[i]]]))
    }

    if(!is.null(control$reltol)) x$inputs$control$reltol=control$reltol
    if(!is.null(control$max_it)) x$inputs$control$max_it=control$max_it
    if(!is.null(control$kappa)) x$inputs$control$kappa=control$kappa
    x$inputs$start = x$inputs$start[dif_par]
    if(!is.null(start)) x$inputs$start=start
    control=x$inputs$control
    control$verbose=0
    cat("MLE under H0:\n")

    x2= generalReg::reg_general(
      formula=as.formula(formula),
      formula_var=as.formula(formula_var),
      start=x$inputs$start,
      data=x$data,
      control=control)
    cat(paste(names(coef(x2)),round(coef(x2),3),sep=":",collapse="  "),"\n")
    par_teste = coef(x2) %>%
      data.frame(nome=names(.),valor=.) %>% tidyr::spread(nome,valor) %>% merge(parameters) %>% dplyr::select(theta_names)
  }

  return(par_teste)}

fit1=generalReg::reg_general(Y ~
                               beta1+beta2*ATTORNEY2,~exp(sigma1+sigma2*ATTORNEY2 ),data=BD,
                             start =
                               list(beta1=0.2,beta2=0.01,sigma1=4,sigma2=0.01),
                             bias_correction = T,
                             method="NR",
                             control=list(reltol = 1e-10, max_it =
                                            5000,kappa='AUTO',verbose=10))
teste2 = par_teste(fit1,list(beta1=fit1$parameters[1],sigma1=fit1$parameters[3]),correction = T)

fit2=generalReg::reg_general(Y ~  + beta2 * ATTORNEY2,
                             ~exp(0.4 + sigma2 * ATTORNEY2),data=BD,
                             start =
                               list(beta2=0.01,sigma2=0.01),
                             bias_correction = T,
                             method="NR",
                             control=list(reltol = 1e-10, max_it =
                                            5000,kappa='AUTO',verbose=10))
teste2
fit2$parameters

